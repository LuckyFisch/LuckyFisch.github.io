<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>服务器安装青龙面板并配置拉库代理</title>
      <link href="/2022/04/04/041923/"/>
      <url>/2022/04/04/041923/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器安装青龙面板并配置拉库代理"><a href="#服务器安装青龙面板并配置拉库代理" class="headerlink" title="服务器安装青龙面板并配置拉库代理"></a>服务器安装青龙面板并配置拉库代理</h1><p>青龙面板是一个支持python3、javaScript、shell、typescript 的定时任务管理面板（A timed task management panel that supports typescript, javaScript, python3, and shell.）非常适合用来管理定时任务，比如每天定时执行一次更新拉库代理</p><ul><li><p>要安装青龙面板的话，首先要安装docker</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>官方教程地址：<a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a><br><img src="https://images.saltedfish.xyz/images/Web_page_picture/docker_official.png" alt="官方教程"><br>官网教程是针对国外，所以国内安装有些许调整</p></li><li><p>国内使用一键安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>安装完之后，需要启动docker服务，并且添加到系统服务，不然服务器每次重启，docker都需要手动启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="安装青龙面板并启动"><a href="#安装青龙面板并启动" class="headerlink" title="安装青龙面板并启动"></a>安装青龙面板并启动</h2></li><li><p>docker安装并启动好之后，接下来就可以安装青龙面板了，青龙面板的启动命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">  -v <span class="variable">$PWD</span>/ql:/ql/data \</span><br><span class="line">  -p 5700:5700 \</span><br><span class="line">  --name qinglong \</span><br><span class="line">  --hostname qinglong \</span><br><span class="line">  --restart always \</span><br><span class="line">  whyour/qinglong:latest</span><br></pre></td></tr></table></figure><p>青龙面板的启动命令中，-v $PWD&#x2F;ql:&#x2F;ql&#x2F;data是将ql目录下的数据文件夹挂载到青龙面板的数据目录下，-p 5700:5700是将青龙面板的端口映射到本地5700端口，–name qinglong是将青龙面板的容器命名为qinglong，–hostname qinglong是将青龙面板的容器的主机名设置为qinglong，–restart always是青龙面板的容器重启时，会自动重启，whyour&#x2F;qinglong:latest是青龙面板的镜像名称，镜像名称可以从镜像仓库搜索，如果没有搜索到，可以通过docker pull whyour&#x2F;qinglong:latest来下载镜像</p></li><li><p>青龙面板启动完成之后，打开浏览器，输入：http:&#x2F;&#x2F;服务器IP:5700&#x2F;，如果没有报错，说明青龙面板启动成功</p></li><li><p>这个地址就是青龙面板的登录地址，第一次登录需要先设置通知设置以及管理员账号密码，设置好之后，就可以管理定时任务了<br><img src="https://images.saltedfish.xyz/images/Web_page_picture/qinglong_Interface.png" alt="青龙面板"></p><h2 id="安装青龙依赖"><a href="#安装青龙依赖" class="headerlink" title="安装青龙依赖"></a>安装青龙依赖</h2></li><li><p>点击依赖管理，进入依赖管理页面，按照下方的顺序新建并添加依赖，直接粘贴进名称点确定就行（记得勾选自动拆分）</p></li></ul><ol><li>Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bizCode</span><br><span class="line">bizMsg</span><br><span class="line">lxml</span><br><span class="line">gcc</span><br><span class="line">libffi-dev</span><br><span class="line">make</span><br><span class="line">musl-dev</span><br><span class="line">openssl-dev</span><br><span class="line">perl-app-cpanminus</span><br><span class="line">perl-dev</span><br><span class="line">python3-dev</span><br><span class="line">site</span><br></pre></td></tr></table></figure></li><li>NodeJS<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">png-js</span><br><span class="line">@types/node</span><br><span class="line">require</span><br><span class="line">typescript</span><br><span class="line">crypto-js</span><br><span class="line">prettytable</span><br><span class="line">dotenv</span><br><span class="line">jsdom</span><br><span class="line">date-fns</span><br><span class="line">tough-cookie</span><br><span class="line">tslib</span><br><span class="line">ws@7.4.3</span><br><span class="line">ts-md5</span><br><span class="line">jsdom -g</span><br><span class="line">jieba</span><br><span class="line">fs</span><br><span class="line">form-data</span><br><span class="line">json5</span><br><span class="line">global-agent</span><br><span class="line">js-base64</span><br><span class="line">axios</span><br></pre></td></tr></table></figure></li><li>Python3<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">requests</span><br><span class="line">canvas</span><br><span class="line">ping3</span><br><span class="line">jieba</span><br><span class="line">cryptography</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置拉库代理"><a href="#配置拉库代理" class="headerlink" title="配置拉库代理"></a>配置拉库代理</h2><ul><li>在青龙面板的管理页面，点击左侧的“配置文件”，进入配置页面，找到GithubProxyUrl&#x3D;”” 在引号中填入你的Github代理地址，如：<a href="https://github.luckyfish.workers.dev/">https://github.luckyfish.workers.dev/</a><br><img src="https://images.saltedfish.xyz/images/Web_page_picture/qinglong_GithubProxyUrl.png" alt="青龙代理配置"></li><li>之后新增一个拉库更新任务，就会发现在github.com前面已经自动添加了你的Github代理地址，这样就可以实现拉库代理了</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
